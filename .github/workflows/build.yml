name: Build Kernel

on:
  push:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # arch: [ arm64, x86 ]
        # variant: [ generic, zen ]
        arch: [ x86 ]
        variant: [ zen ]
    env:
      # will be initialized in steps
      MSFT_TREE_DEPTH:
      REPO_LINUX_TREE:
      REPO_MSFT_TREE:
      PATH_MSFT_TREE:
      PATH_LINUX_TREE:
      KCONF_PATH:
      VERSION:
      _UCC_BODY:
      _UCC_TITLE:
      _UKO_BODY:
      _UKO_TITLE:
      CURRENT_DATE:
      KCONF_HASH:

    steps:
    - name: Checkout current repository
      uses: actions/checkout@v4

    - name: Fetch Latest Version and Patch from Zen Build
      run: |
        source ./ENV
        source ./scripts/zen-kernel.sh
      env:
        _GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get hash from config file
      run: |
        source ./ENV
        echo "KCONF_HASH=$(md5sum $KCONF_PATH)" >> $GITHUB_ENV
      env:
        _ARCH: ${{ matrix.arch }}

    - name: Setup Commit Caches
      id: commit-cache
      uses: actions/cache@v4
      with:
        path: "LICENSE"
        key: conf-${{ env.VERSION }}-${{ env.KCONF_HASH }}

    - name: Setup Source Tree Caches
      id: cache
      uses: actions/cache@v4
      if: steps.commit-cache.outputs.cache-hit != 'true'
      with:
        path: |
          ${{ env.PATH_MSFT_TREE }}
          ${{ env.PATH_LINUX_TREE }}
        key: kernel-${{ env.VERSION }}

    - name: Checkout MSFT Kernel Repository
      uses: actions/checkout@v4
      if: steps.commit-cache.outputs.cache-hit != 'true' && steps.cache.outputs.cache-hit != 'true'
      with:
        repository: ${{ env.REPO_MSFT_TREE }}
        fetch-depth: ${{ env.MSFT_TREE_DEPTH }}
        path: ${{ env.PATH_MSFT_TREE }}
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Checkout Linux Kernel Repository
      if: steps.commit-cache.outputs.cache-hit != 'true' && steps.cache.outputs.cache-hit != 'true'
      run: |
        git clone --depth 1 --branch v${{ env.VERSION }} ${{ env.REPO_LINUX_TREE }} ${{ env.PATH_LINUX_TREE }}

    - name: Diff Commit From MSFT Kernel
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: |
        source ./ENV
        source ./scripts/diff-commit.sh

    - name: Patch Linux Kernel Tree
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: |
        source ./ENV
        source ./scripts/patch.sh

    - name: Install Required Packages for Build
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: |
        source ./scripts/ubuntu-build-deps.sh

    - name: Build Kernel
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: |
        source ./ENV
        source ./scripts/build-kernel.sh
      env:
        _ARCH: ${{ matrix.arch }}

    - name: Get hash from config file
      run: echo "KCONF_HASH=$(md5sum $KCONF_PATH)" >> $GITHUB_ENV

    - name: Update Commit Caches
      uses: actions/cache@v4
      with:
        path: "LICENSE"
        key: conf-${{ env.VERSION }}-${{ env.KCONF_HASH }}

    - name: Summary report
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: |
        source ./ENV
        source ./scripts/summary.sh

    - name: Unresolved Confilct Commit Report
      if: steps.commit-cache.outputs.cache-hit != 'true' && env._UCC_BODY != ''
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/auto-issue-report.md
      env:
        title: ${{ env._UCC_TITLE }}
        body: ${{ env._UCC_BODY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Unresolved Kernel Option Report
      if: steps.commit-cache.outputs.cache-hit != 'true' && env._UKO_BODY != ''
      uses: JasonEtco/create-an-issue@v2
      with:
        filename: .github/auto-issue-report.md
      env:
        title: ${{ env._UKO_TITLE }}
        body: ${{ env._UKO_BODY }}
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Get current date
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: echo "CURRENT_DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

    - name: Release
      if: steps.commit-cache.outputs.cache-hit != 'true'
      uses: softprops/action-gh-release@v2
      with:
        name: v${{ env.VERSION }}-${{ matrix.variant }}
        token: ${{ secrets.GITHUB_TOKEN }}
        tag_name: ${{ env.VERSION }}
        files: |
          ${{ env.PATH_LINUX_TREE }}-workdir/arch/x86/boot/bzImage
      env:
        GITHUB_REPOSITORY: my_gh_org/my_gh_repo

    - name: Setup Required Env
      if: steps.commit-cache.outputs.cache-hit != 'true'
      run: |
        source ./ENV
      env:
        _ARCH: ${{ matrix.arch }}

    - name: Update Kernel Config
      if: steps.commit-cache.outputs.cache-hit != 'true'
      uses: EndBug/add-and-commit@v9
      with:
        add: ${{ env.KCONF_PATH }}
        message: "conf: updated to newly generated kernel config for ${{ env.VERSION }}-${{ matrix.variant }}"
        committer_name: GitHub Actions
        committer_email: actions@github.com